3.

כדי לעדכן ממוצעים שעתיים בזמן אמת, ניתן להשתמש בשיטה בה הממוצעים מחושבים כל שעה על פי זרימת הנתונים שמגיעים. אם הנתונים מגיעים בזרימה (stream), יש לעדכן את הממוצעים בשעתיים האחרונות בכל פעם שנתון חדש מגיע.
תכנון הפתרון:

1.	שימוש בזיכרון: נשתמש במילון (Dictionary) שיאחסן את הערכים לפי שעה, כך שכל שעה תשמור את הערכים שלה והם יוכלו להתעדכן בזמן אמת.
2.	המרת חותמת הזמן לשעה: כל פעם שיתקבל נתון חדש, נהפוך את חותמת הזמן של הנתון לשעה הקרובה ביותר (כמו 2023-04-06 08:00:00), ובכך נוכל לחשב את ממוצע הערכים של כל שעה בנפרד.
3.	עדכון ממוצעים: כל פעם שנכנס נתון חדש, נחשב מחדש את הממוצע של השעה המתאימה באמצעות רשימת הערכים שנשמרים במילון.
4.	שמירה של ממוצעים: אפשר לשמור את הממוצעים השעתיים או להדפיס אותם בזמן אמת, ולקבוע זמן "flush" מדי שעה שמנקה את הנתונים הישנים מתוך הזיכרון כדי לשמור על ביצועים גבוהים.
5.	שימוש בזרימה (streaming): במקום לטעון קובץ שלם, התוכנית תטפל בנתונים שהגיעו אחד אחרי השני, תקבל את הנתונים לפי זמן אמת ותעדכן את הממוצע של השעה בכל פעם שיתקבל נתון חדש

4. Parquet
     Parquet הוא פורמט עמודות (Columnar), מה שמסייע במטיפול יעיל יותר בנתונים גדולים. 
      היתרונות בהשוואה לפורמטים אחרים :

-	קומפרסיה: פורמט Parquet מבצע דחיסה אוטומטית, חוסך מקום בזיכרון.
-	 קריאה סלקטיבית: ניתן לקרוא רק את העמודות הרלוונטיות, דבר שמפחית את הזמן והמשאבים הדרושים.
-	 ביצועים טובים יותר: עם נתונים מסודרים בעמודות, ביצועי החיפושים והחישובים משתפרים בצורה משמעותית. 
-	תמיכה בנתונים גדולים ובמערכות ביג דאטה: פורמט זה תומך במערכות מבוזרות כמו Apache  Spark, Hive ועוד.
